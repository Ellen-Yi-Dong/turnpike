server {
    listen       {{ NGINX_LISTEN }} default_server;
    server_name  {{ INTERNAL_HOSTNAME }} {{ PRIVATE_HOSTNAME }};
    port_in_redirect off;
    server_name_in_redirect on;
    {{ NGINX_SSL_CONFIG }}
    include      api_conf.d/*.conf;

    location /_nginx/ {
        access_log off;
        return 200 "OK";
    }

    location = /stub_status {
        stub_status;
    }

    location = /auth/ {
        internal;

        proxy_pass              {{ FLASK_SERVICE_URL }};
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        referer $http_referer;
        proxy_set_header        X-Original-URI $request_uri;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port 443;
        proxy_set_header        X-Forwarded-Proto https;
        proxy_set_header        X-Matched-Backend $matched_backend;
        {% for header in headers %}
        proxy_set_header        {{ header }} $http_{{ header.lower().replace('-', '_') }};
        {% endfor %}
    }

    {% for blueprint in blueprints %}
    location {{ blueprint }} {
        proxy_pass              {{ FLASK_SERVICE_URL }};
        proxy_set_header        X-Original-URI $request_uri;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port 443;
        proxy_set_header        X-Forwarded-Proto https;
    }
    {% endfor %}

    # Default error location for "401 - Unauthorized" responses.
    error_page 401 = @error401;
    location @error401 {
        # Set up a couple of variables so that we redirect users to the
        # "internal" SAML login page by default.
        set $redirect_hostname      {{ INTERNAL_HOSTNAME }};
        set $saml_type              'internal';

        # In the case that the request comes from the "private" network,
        # override the settings so that the redirect points to the "private"
        # SAML endpoints instead.
        if ($http_x_rh_edge_host ~ private) {
            set $redirect_hostname  {{ PRIVATE_HOSTNAME }};
            set $saml_type          'private';
        }

        return 302 https://$redirect_hostname/saml/$saml_type/login/?next=$request_uri;
    }
}
